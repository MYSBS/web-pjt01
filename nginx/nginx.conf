# HTTP → HTTPS 강제 리다이렉트
server {
    listen 80;
    server_name amuredo.me www.amuredo.me;
    return 301 https://$host$request_uri;
}

# HTTPS 서버 설정
server {
    listen 443 ssl;
    server_name amuredo.me www.amuredo.me;

    # SSL 인증서 경로
    ssl_certificate /etc/letsencrypt/live/amuredo.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/amuredo.me/privkey.pem;
    
    # DH 파라미터 (반드시 생성 필요)
    ssl_dhparam /etc/letsencrypt/dhparam.pem;

    # HTTP/2 활성화 (최신 문법)
    http2 on;

    # SSL 프로토콜 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # 프록시 설정
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 정적 파일 서빙
    location /static/ {
        alias /app/staticfiles/;
        expires 30d;
        access_log off;
    }

    location /media/ {
        alias /app/media/;
        expires 30d;
        access_log off;
    }
}
